__NUXT_JSONP__("/view/javascript-tips-tricks-n1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx){return {data:[{article:{slug:"javascript-tips-tricks-n1",description:as,title:"JavaScript: Array Tips and Tricks You Should Know",img:"https:\u002F\u002Fengineering.fb.com\u002Fwp-content\u002Fuploads\u002F2012\u002F12\u002Fjavascript-illustration.png",category:"Cheat Sheet",tags:["javascript","tips and tricks"],createdAtDate:"2021-04-27T00:00:00.000Z",toc:[{id:at,depth:B,text:"Number One: How to remove duplicates inside an array?"},{id:au,depth:B,text:av},{id:aw,depth:B,text:ax},{id:ay,depth:B,text:az},{id:aA,depth:B,text:aB},{id:aC,depth:B,text:aD},{id:aE,depth:B,text:aF},{id:aG,depth:B,text:aH},{id:aI,depth:B,text:aJ},{id:aK,depth:B,text:aL},{id:aM,depth:B,text:aN},{id:aO,depth:B,text:aP},{id:aQ,depth:B,text:aR},{id:aS,depth:B,text:aT},{id:aU,depth:B,text:aV},{id:aW,depth:B,text:aX}],body:{type:"root",children:[{type:b,tag:v,props:{},children:[{type:a,value:"We already know that aside from objects, most of the time we use arrays on every javascript program. It is one of the important types that anyone should know."}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:as}]},{type:a,value:h},{type:b,tag:C,props:{id:at},children:[{type:b,tag:w,props:{href:"#number-one-how-to-remove-duplicates-inside-an-array",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:"Number One: How to remove "},{type:b,tag:"strong",props:{},children:[{type:a,value:"duplicates"}]},{type:a,value:" inside an array?"}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"Sometimes we only want unique data in our array, so how can we do this? we do this by using "},{type:b,tag:G,props:{},children:[{type:a,value:af}]},{type:a,value:" object. Because a set should contain a unique value, so it removes the duplicates."}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" numbers "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:R}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aa}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ag}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aa}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aZ}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" uniqueNumbers "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ah}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"numbers"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"uniqueFruits2"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns [“1”, “2”, “3”, “4”, “5”,\"9\"]"}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:au},children:[{type:b,tag:w,props:{href:"#number-2-how-to-replace-a-specific-value-in-an-array",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:av}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"Sometimes it’s necessary to replace a specific value in the array while creating code, and there is a nice short method to do it which you might not know yet. For this, we may use .splice(start, value to remove, valueToAdd) and pass there all three parameters specifying where we want to start modification, how many values we want to change and the new values."}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nfruits"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:"splice"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" “potato”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns [“potato”, “tomato”, “orange”, “watermelon”, “apple”, “orange”, “grape”, “apple”]"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aw},children:[{type:b,tag:w,props:{href:"#3-map-array-without-map",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:ax}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"Probably everyone knows .map() method of arrays, but there is a different solution that may be used to get a similar effect and very clean code as well. We can use .from() method for this purpose."}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" friends "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:" ‘John’"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:" ‘Peter’"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"23"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:" ‘Mark’"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"24"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:" ‘Maria’"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bc}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:" ‘Monica’"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"21"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:" ‘Martha’"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:P}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"19"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:"\n \n\n"},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" friendsNames "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,ae,z]},children:[{type:a,value:bd}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,l,"module"]},children:[{type:a,value:"from"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"friends"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,ak]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:"name"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,j]},children:[{type:a,value:am}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"friendsNames"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns [“John”, “Peter”, “Mark”, “Maria”, “Monica”, “Martha”]"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:ay},children:[{type:b,tag:w,props:{href:"#4-empty-an-array",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:az}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"Do you have an array full of elements but you need to clean it for any purpose, and you don’t want to remove items one by one? It’s very simple to do it in one line of code. To empty an array, you need to set an array’s length to 0, and that’s it!"}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:a$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n \n\nfruits"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:be}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bb},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns []"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aA},children:[{type:b,tag:w,props:{href:"#5-convert-array-to-an-object",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aB}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"It happens that we have an array, but for some purpose, we need an object with this data, and the fastest way to convert the array into an object is to use a well-known spread operator (…)."}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" fruitsObj "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:" …fruits "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"fruitsObj"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns {0: “banana”, 1: “apple”, 2: “orange”, 3: “watermelon”, 4: “apple”, 5: “orange”, 6: “grape”, 7: “apple”}"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aC},children:[{type:b,tag:w,props:{href:"#6-fulfill-array-with-data",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aD}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"There are some situations when we create an array, and we would like to fill it with some data, or we need an array with the same values, and in this case .fill() method comes with an easy and clean solution."}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" newArray "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ah}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bd}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"10"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:"fill"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aY},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"newArray"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns [“1”, “1”, “1”, “1”, “1”, “1”, “1”, “1”, “1”, “1”, “1”]"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aE},children:[{type:b,tag:w,props:{href:"#7-merge-arrays",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aF}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"Do you know how to merge arrays into one array not using .concat() method? There is a simple way to merge any amount of arrays into one in one line of code. As you probably realized already spread operator (…) is pretty useful while working with arrays and it’s the same in this case."}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:"“apple”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" “banana”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" meat "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:"“poultry”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" “beef”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" “fish”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" vegetables "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:"“potato”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:ba},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" “cucumber”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" food "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:"…fruits"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" …meat"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" …vegetables"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"food"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F [“apple”, “banana”, “orange”, “poultry”, “beef”, “fish”, “potato”, “tomato”, “cucumber”]"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aG},children:[{type:b,tag:w,props:{href:"#8-find-the-intersection-of-two-arrays",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aH}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"It’s also one of the most popular challenges which you can face on any Javascript interview because it shows if you can use array methods and what is your logic. To find the intersection of two arrays, we will use one of the previously shown methods in this article, to make sure that values in the array we are checking are not duplicated and we will use .filter method and .includes method. As a result, we will get the array with values that were presented in both arrays. Check the code:"}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" numOne "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" numTwo "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" duplicatedValues "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:a_},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ah}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"numOne"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:bh}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,j]},children:[{type:a,value:am}]},{type:a,value:" numTwo"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:"includes"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"duplicatedValues"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns [2, 4, 6]"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aI},children:[{type:b,tag:w,props:{href:"#9-remove-falsy-values-from-an-array",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aJ}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"At first, let’s defined falsy values. In Javascript, falsy values are false, 0, „”, null, NaN, undefined. Now we can find out how to remove this kind of values from our array. To achieve this, we are going to use the .filter() method."}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" mixedArr "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" “blue”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" “”"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"NaN"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bi]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l,"nil"]},children:[{type:a,value:"undefined"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,bi]},children:[{type:a,value:"false"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" trueArr "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:" mixedArr"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,ae,z]},children:[{type:a,value:"Boolean"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"trueArr"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns [“blue”, 9, true, “white”]"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aK},children:[{type:b,tag:w,props:{href:"#10-get-random-value-form-the-array",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aL}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"Sometimes we need to select a value from the array randomly. To create it in an easy, fast, and short way and keep our code clean we can get a random index number according to the array length. Let’s see the code:"}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:bj},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" randomColor "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:bs},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,ae,z]},children:[{type:a,value:bt}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:"floor"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,ae,z]},children:[{type:a,value:bt}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:"random"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"*"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"colors"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:be}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aM},children:[{type:b,tag:w,props:{href:"#11-reversing-an-array",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aN}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"When we need to flip our array there is no need to create it through the complicated loops and functions, there is an easy array method which does it all for us, and with one line of code, we may have our array reversed. Let’s check it:"}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:bj},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bl},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bo},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bq},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:br},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" reversedColors "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:bs},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:"reverse"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"reversedColors"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns [“brown”, “black”, “yellow”, “orange”, “purple”, “pink”, “navy”, “green”, “white”, “blue”]"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aO},children:[{type:b,tag:w,props:{href:"#12-lastindexof-method",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aP}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"In Javascript, there is an interesting method which allows finding the index of the last occurrence of the given element. For example, if our array has duplicated values, we can find the position of the last occurrence of it. Let’s see the code example:"}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aa}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"7"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" lastIndex "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:"lastIndexOf"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"lastIndex"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns 9"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aQ},children:[{type:b,tag:w,props:{href:"#13-sum-all-the-values-in-the-array",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aR}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"Another challenge which happens very often during Javascript Engineer interviews. Nothing scary comes here; it can be solved using .reduce method in one line of code. Let’s check out the code:"}]},{type:a,value:h},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:G,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:bu},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:ab}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:p}]},{type:a,value:" sum "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:o}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:"reduce"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:"x"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:bw}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,al,j]},children:[{type:a,value:am}]},{type:a,value:" x "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"+"}]},{type:a,value:bw},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,r,z]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,t,u,s]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"sum"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"\u002F\u002F returns 14"}]},{type:a,value:M}]}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aS},children:[{type:b,tag:w,props:{href:"#conclusion",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aT}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"In this article, I presented you 13 tricks and tips which can help you with coding and keep your code short and clean. Also, remember there are lots of different tricks which you may use in Javascript worth exploring, not only about arrays but also different data types. I hope you like the solutions provided in the article, and you will use them to improve your development process."}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:a,value:"Have a nice coding!"}]},{type:a,value:h},{type:b,tag:C,props:{id:aU},children:[{type:b,tag:w,props:{href:"#ref",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aV}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:b,tag:w,props:{href:bx,rel:[ao,ap,aq],target:ar},children:[{type:a,value:bx}]}]},{type:a,value:h},{type:b,tag:C,props:{id:aW},children:[{type:b,tag:w,props:{href:"#related-readings-",ariaHidden:A,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:aX}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:b,tag:w,props:{href:"https:\u002F\u002Fwww.blog.duomly.com\u002Fhow-to-code-learn-step-by-step-how-to-become-a-programmer-with-duomly\u002F",rel:[ao,ap,aq],target:ar},children:[{type:a,value:"How to code – learn step by step how to become a programmer with Duomly"}]}]},{type:a,value:h},{type:b,tag:v,props:{},children:[{type:b,tag:w,props:{href:"https:\u002F\u002Fwww.blog.duomly.com\u002Ffor-loop-while-loop-do-while-loop-and-other-javascript-loops-comparison-and-performance\u002F",rel:[ao,ap,aq],target:ar},children:[{type:a,value:"For loop, while loop, do…while loop and other JavaScript loops – comparison and performance"}]}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fjavascript-tips-tricks-n1",extension:".md",createdAt:"2021-04-12T14:50:32.367Z",updatedAt:"2021-04-29T11:03:34.551Z"}}],fetch:{},mutations:void 0}}("text","element","span","token","punctuation",","," ","\n","number","operator",";","keyword","(",")","=","var",".","console","property-access","method","function","p","a","[","]","class-name","true",3,"h3",-1,"icon","icon-link","code","div","nuxt-content-highlight","pre","language-javascript","line-numbers","\n\n","log","comment",":","”","2"," “orange”","{","}"," “","5"," “apple”"," name","1","\n    "," age","3","6"," fruits ","0","known-class-name","Set","4","new","“banana”"," “watermelon”","parameter","arrow","=\u003E"," “white”","nofollow","noopener","noreferrer","_blank","In this article, we will look at some of the tips that you should know about manipulating arrays in javascript.","number-one-how-to-remove-duplicates-inside-an-array","number-2-how-to-replace-a-specific-value-in-an-array","Number 2: How to replace a specific value in an Array?","3-map-array-without-map","3. Map array without .map()","4-empty-an-array","4. Empty an array","5-convert-array-to-an-object","5. Convert array to an object","6-fulfill-array-with-data","6. Fulfill array with data","7-merge-arrays","7. Merge arrays","8-find-the-intersection-of-two-arrays","8. Find the intersection of two arrays","9-remove-falsy-values-from-an-array","9. Remove falsy values from an array","10-get-random-value-form-the-array","10. Get random value form the array","11-reversing-an-array","11. Reversing an array","12-lastindexof-method","12. .lastIndexOf() method","13-sum-all-the-values-in-the-array","13. Sum all the values in the array","conclusion","Conclusion","ref","REF:","related-readings-","Related readings 📖","“","9","…"," “grape”"," “tomato”","fruits","22","Array","length","8","filter","item","boolean"," colors ","“blue”"," “green”"," “navy”"," “pink”"," “purple”"," “yellow”"," “black”"," “brown”"," colors","Math"," nums "," nums"," y","https:\u002F\u002Fwww.blog.duomly.com\u002F13-useful-javascript-array-tips-and-tricks-you-should-know\u002F")));